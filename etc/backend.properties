## Crowd client settings
# https://confluence.atlassian.com/crowd/the-crowd-properties-file-98665664.html

# The name that the application will use when authenticating with the Crowd server.
application.name=ldap-adapter

# The password that the application will use when authenticating with the Crowd server.
application.password=password

# The URL to use when connecting with the integration libraries to communicate with the Crowd server.
crowd.server.url=http://localhost:8095/crowd/services/

# The number of minutes to cache authentication validation in the session. If this value is set to 0, each HTTP
# request will be authenticated with the Crowd server.
session.validationinterval=0

## backend settings for class CrowdDirectoryBackend

# check connection to backend at startup
readiness-check=true

## backend settings for class MirroredCrowdDirectoryBackend

# The name of the user used by REST access.
rest.username=admin

# The user password used when authenticating with the Crowd server.
rest.user-password=password

# The base URL to use when connecting to REST endpoints of the Crowd server.
rest.base-url=http://localhost:8095/crowd

# The number of transferred entities per synchronization page. A big number leads to high CPU usage and a small
# number results in high latency.
mirror.sync.page-size=2000

# The number of transferred entries of the audit log.
mirror.audit-log.page-size=20

# The maximum number of downloaded audit log pages. If the number of non synchronized entries in the Crowd audit log
# reaches the limit page-size * page-limit the download of a full copy is performed instead of an incremental
# update.
mirror.audit-log.page-limit=3

# Force a complete synchronization at application boot time.
mirror.force-full-sync-on-boot=true

## backend settings for class CachedWithPersistenceDirectoryBackend

# connection pool settings
database.jdbc.driver=org.h2.Driver
database.jdbc.connection.url=jdbc:h2:./tmp/db
database.jdbc.connection.user=
database.jdbc.connection.password=
database.jdbc.connection.min-idle=5
database.jdbc.connection.max-idle=10
database.jdbc.connection.max-total=30
database.jdbc.connection.max-open-prepared-statements=200
database.jdbc.connection.isolation-level=REPEATABLE_READ

# transaction timeout in milliseconds
persistence.transaction-timeout=60000

# apply native SQL
persistence.apply-native-sql=false

# use materialized views
persistence.use-materialized-views=false

# AcquireDbLock wait time, how long in seconds will the function in total try to get the lock
persistence.acquiredblock-wait-time = 5
# how many seconds shall AcquireDbLock wait between two tries
persistence.acquiredblock-recheck-time = 1

# pass only active users
persistence.pass-active-users-only=true

# set initial delay for sync-job in seconds
mirror.sync.initialdelay = 3
# set period for sync-job in seconds
mirror.sync.period = 4
 
# enable postgres dblock for corwd-sync so that only one of <n> instances executes the syncjob
mirror.sync.usebdlock=false
mirror.sync.lockid=123456

